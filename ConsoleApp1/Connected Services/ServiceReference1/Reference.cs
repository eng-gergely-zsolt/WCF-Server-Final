//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApp1.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStationList", ReplyAction="http://tempuri.org/IService1/GetStationListResponse")]
        WCFService.StationType[] GetStationList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStationList", ReplyAction="http://tempuri.org/IService1/GetStationListResponse")]
        System.Threading.Tasks.Task<WCFService.StationType[]> GetStationListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLineTraceList", ReplyAction="http://tempuri.org/IService1/GetLineTraceListResponse")]
        WCFService.LineTraceType[] GetLineTraceList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLineTraceList", ReplyAction="http://tempuri.org/IService1/GetLineTraceListResponse")]
        System.Threading.Tasks.Task<WCFService.LineTraceType[]> GetLineTraceListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStationOnLineList", ReplyAction="http://tempuri.org/IService1/GetStationOnLineListResponse")]
        WCFService.StationOnLineType[] GetStationOnLineList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStationOnLineList", ReplyAction="http://tempuri.org/IService1/GetStationOnLineListResponse")]
        System.Threading.Tasks.Task<WCFService.StationOnLineType[]> GetStationOnLineListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetArrivalTimeList", ReplyAction="http://tempuri.org/IService1/GetArrivalTimeListResponse")]
        WCFService.ArrivalTimeType[] GetArrivalTimeList(int StationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetArrivalTimeList", ReplyAction="http://tempuri.org/IService1/GetArrivalTimeListResponse")]
        System.Threading.Tasks.Task<WCFService.ArrivalTimeType[]> GetArrivalTimeListAsync(int StationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBusInformationList", ReplyAction="http://tempuri.org/IService1/GetBusInformationListResponse")]
        WCFService.BusDataType[] GetBusInformationList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBusInformationList", ReplyAction="http://tempuri.org/IService1/GetBusInformationListResponse")]
        System.Threading.Tasks.Task<WCFService.BusDataType[]> GetBusInformationListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBusList", ReplyAction="http://tempuri.org/IService1/GetBusListResponse")]
        WCFService.bus[] GetBusList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBusList", ReplyAction="http://tempuri.org/IService1/GetBusListResponse")]
        System.Threading.Tasks.Task<WCFService.bus[]> GetBusListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTimetableList", ReplyAction="http://tempuri.org/IService1/GetTimetableListResponse")]
        WCFService.TimetableType[] GetTimetableList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTimetableList", ReplyAction="http://tempuri.org/IService1/GetTimetableListResponse")]
        System.Threading.Tasks.Task<WCFService.TimetableType[]> GetTimetableListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTimetableList44", ReplyAction="http://tempuri.org/IService1/GetTimetableList44Response")]
        WCFService.TimetableType[] GetTimetableList44();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTimetableList44", ReplyAction="http://tempuri.org/IService1/GetTimetableList44Response")]
        System.Threading.Tasks.Task<WCFService.TimetableType[]> GetTimetableList44Async();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService1/PostBusMeasurement")]
        void PostBusMeasurement(WCFService.MeasurementType busInfo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService1/PostBusMeasurement")]
        System.Threading.Tasks.Task PostBusMeasurementAsync(WCFService.MeasurementType busInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Synchronization", ReplyAction="http://tempuri.org/IService1/SynchronizationResponse")]
        string Synchronization();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Synchronization", ReplyAction="http://tempuri.org/IService1/SynchronizationResponse")]
        System.Threading.Tasks.Task<string> SynchronizationAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ConsoleApp1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ConsoleApp1.ServiceReference1.IService1>, ConsoleApp1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFService.StationType[] GetStationList() {
            return base.Channel.GetStationList();
        }
        
        public System.Threading.Tasks.Task<WCFService.StationType[]> GetStationListAsync() {
            return base.Channel.GetStationListAsync();
        }
        
        public WCFService.LineTraceType[] GetLineTraceList() {
            return base.Channel.GetLineTraceList();
        }
        
        public System.Threading.Tasks.Task<WCFService.LineTraceType[]> GetLineTraceListAsync() {
            return base.Channel.GetLineTraceListAsync();
        }
        
        public WCFService.StationOnLineType[] GetStationOnLineList() {
            return base.Channel.GetStationOnLineList();
        }
        
        public System.Threading.Tasks.Task<WCFService.StationOnLineType[]> GetStationOnLineListAsync() {
            return base.Channel.GetStationOnLineListAsync();
        }
        
        public WCFService.ArrivalTimeType[] GetArrivalTimeList(int StationID) {
            return base.Channel.GetArrivalTimeList(StationID);
        }
        
        public System.Threading.Tasks.Task<WCFService.ArrivalTimeType[]> GetArrivalTimeListAsync(int StationID) {
            return base.Channel.GetArrivalTimeListAsync(StationID);
        }
        
        public WCFService.BusDataType[] GetBusInformationList() {
            return base.Channel.GetBusInformationList();
        }
        
        public System.Threading.Tasks.Task<WCFService.BusDataType[]> GetBusInformationListAsync() {
            return base.Channel.GetBusInformationListAsync();
        }
        
        public WCFService.bus[] GetBusList() {
            return base.Channel.GetBusList();
        }
        
        public System.Threading.Tasks.Task<WCFService.bus[]> GetBusListAsync() {
            return base.Channel.GetBusListAsync();
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WCFService.TimetableType[] GetTimetableList() {
            return base.Channel.GetTimetableList();
        }
        
        public System.Threading.Tasks.Task<WCFService.TimetableType[]> GetTimetableListAsync() {
            return base.Channel.GetTimetableListAsync();
        }
        
        public WCFService.TimetableType[] GetTimetableList44() {
            return base.Channel.GetTimetableList44();
        }
        
        public System.Threading.Tasks.Task<WCFService.TimetableType[]> GetTimetableList44Async() {
            return base.Channel.GetTimetableList44Async();
        }
        
        public void PostBusMeasurement(WCFService.MeasurementType busInfo) {
            base.Channel.PostBusMeasurement(busInfo);
        }
        
        public System.Threading.Tasks.Task PostBusMeasurementAsync(WCFService.MeasurementType busInfo) {
            return base.Channel.PostBusMeasurementAsync(busInfo);
        }
        
        public string Synchronization() {
            return base.Channel.Synchronization();
        }
        
        public System.Threading.Tasks.Task<string> SynchronizationAsync() {
            return base.Channel.SynchronizationAsync();
        }
    }
}
